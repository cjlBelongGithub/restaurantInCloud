<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="applicationContext_service.xml"/>
    <!--url和处理器进行匹配，处理器是注解式实例化  映射器能能解析注解式处理器-->
    <!--url和处理器进行匹配，处理器是注解式实例化  适配器能解析注解式处理器-->
    <!--注解式 映射器和适配器（处理 注解式的处理器）-->
    <mvc:annotation-driven conversion-service="conversionService2"></mvc:annotation-driven>

    <!--处理器注解，扫描注解的处理器-->
    <context:component-scan base-package="com.restaurant.control"/>


    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"/>

    <!--实例化转换器对象 注册到转换器体系中（SpringMVC 很多转换器的类）-->
    <bean id="conversionService2"  class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!--往工厂里面放置自己编写的转换器-->
        <property name="converters">
            <list>
                <!--将自己的转化器实例化对象，将对象放置到转化器工厂 需要绑定到映射器上-->
                <bean class="com.restaurant.util.DateConveter"/>
            </list>
        </property>
    </bean>
    <!--对文件上传的支持-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"><value>10000000</value></property>
    </bean>

   <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="commonIntercepter" class="com.restaurant.util.LoginIntcepter"></bean>
        </mvc:interceptor>
    </mvc:interceptors>关闭拦截器-->
</beans>